[
  {
    "objectID": "homework 9.html",
    "href": "homework 9.html",
    "title": "ST558 Homework 9",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntemp_data &lt;- read_csv(\"SeoulBikeData.csv\", col_names = TRUE, locale = locale(encoding=\"latin1\"))\n\nRows: 8760 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Date, Seasons, Holiday, Functioning Day\ndbl (10): Rented Bike Count, Hour, Temperature(°C), Humidity(%), Wind speed ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "homework 9.html#reading-in-the-data",
    "href": "homework 9.html#reading-in-the-data",
    "title": "ST558 Homework 9",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntemp_data &lt;- read_csv(\"SeoulBikeData.csv\", col_names = TRUE, locale = locale(encoding=\"latin1\"))\n\nRows: 8760 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Date, Seasons, Holiday, Functioning Day\ndbl (10): Rented Bike Count, Hour, Temperature(°C), Humidity(%), Wind speed ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "homework 9.html#checking-the-data",
    "href": "homework 9.html#checking-the-data",
    "title": "ST558 Homework 9",
    "section": "Checking the Data",
    "text": "Checking the Data\n\nbike_data &lt;- temp_data |&gt;\n  drop_na() |&gt;  # removes any rows with missing values (there are none)\n  mutate(Date = dmy(Date)) |&gt;  # converts date column to date variable\n  mutate(across(where(is.character), as.factor))  # converts all other character columns into factors\n\n## renaming all variables\nbike_names &lt;- c(\"date\", \"count\", \"hour\", \"temp\", \"humidity\", \"windspeed\", \"visibility\", \"dewpoint\", \"radiation\", \"rainfall\",\n                \"snowfall\", \"season\", \"holiday\", \"funcday\")\n\nnames(bike_data) &lt;- bike_names\n\n\n## count is 0 when funcday = No, removing from data\nbike_data &lt;- bike_data |&gt;\n  filter(funcday != \"No\")\n\n\n## final summary\nsum_data &lt;- bike_data |&gt;\n  group_by(date, season, holiday) |&gt;\n  summarize(count = sum(count, na.rm = TRUE),\n            rainfall = sum(rainfall, na.rm = TRUE),\n            snowfall = sum(snowfall, na.rm = TRUE),\n            across(where(is.numeric) & !c(count, hour), mean, na.rm = TRUE)\n            )\n\nWarning: There was 1 warning in `summarize()`.\nℹ In argument: `across(where(is.numeric) & !c(count, hour), mean, na.rm =\n  TRUE)`.\nℹ In group 1: `date = 2017-12-01`, `season = Winter`, `holiday = No Holiday`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n\n`summarise()` has grouped output by 'date', 'season'. You can override using\nthe `.groups` argument."
  },
  {
    "objectID": "homework 9.html#split-the-data",
    "href": "homework 9.html#split-the-data",
    "title": "ST558 Homework 9",
    "section": "Split the Data",
    "text": "Split the Data\n\nlibrary(tidymodels)\n\nWarning: package 'tidymodels' was built under R version 4.4.2\n\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.6     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tune         1.2.1\n✔ infer        1.0.7     ✔ workflows    1.1.4\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.2.1     ✔ yardstick    1.3.1\n✔ recipes      1.1.0     \n\n\nWarning: package 'dials' was built under R version 4.4.2\n\n\nWarning: package 'infer' was built under R version 4.4.2\n\n\nWarning: package 'modeldata' was built under R version 4.4.2\n\n\nWarning: package 'parsnip' was built under R version 4.4.2\n\n\nWarning: package 'recipes' was built under R version 4.4.2\n\n\nWarning: package 'rsample' was built under R version 4.4.2\n\n\nWarning: package 'tune' was built under R version 4.4.2\n\n\nWarning: package 'workflows' was built under R version 4.4.2\n\n\nWarning: package 'workflowsets' was built under R version 4.4.2\n\n\nWarning: package 'yardstick' was built under R version 4.4.2\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n\nbike_split &lt;- initial_split(sum_data, 0.75)\nbike_train &lt;- training(bike_split)\nbike_test &lt;- testing(bike_split)\n\n\nbike_10_fold &lt;- vfold_cv(bike_train, 10)"
  },
  {
    "objectID": "homework 9.html#fitting-mlr-models",
    "href": "homework 9.html#fitting-mlr-models",
    "title": "ST558 Homework 9",
    "section": "Fitting MLR Models",
    "text": "Fitting MLR Models\n\n## first recipe\nbike_rec_1 &lt;- \n  recipe(count ~ ., data = sum_data) |&gt;\n  update_role(date, new_role = \"ID\") |&gt;\n  step_date(date, features = \"dow\") |&gt;\n  step_mutate(day_type = factor(if_else(date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\"))) |&gt;\n  step_rm(date_dow) |&gt;\n  step_normalize(all_numeric(), -all_outcomes()) |&gt;\n  step_dummy(season, holiday, day_type)\n\n\n## second recipe\nbike_rec_2 &lt;- \n  recipe(count ~ ., data = sum_data) |&gt;\n  update_role(date, new_role = \"ID\") |&gt;\n  step_date(date, features = \"dow\") |&gt;\n  step_mutate(day_type = factor(if_else(date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\"))) |&gt;\n  step_rm(date_dow) |&gt;\n  step_normalize(all_numeric(), -all_outcomes()) |&gt;\n  step_dummy(season, holiday, day_type) |&gt;\n  step_interact(terms = ~starts_with(\"season\")*starts_with(\"holiday\") + temp*rainfall) |&gt;\n  step_interact(terms = ~season_Spring*temp + season_Winter*temp) |&gt;\n  step_interact(terms = ~season_Summer*temp)\n\n\n## third recipe\nbike_rec_3 &lt;- \n  recipe(count ~ ., data = sum_data) |&gt;\n  update_role(date, new_role = \"ID\") |&gt;\n  step_date(date, features = \"dow\") |&gt;\n  step_mutate(day_type = factor(if_else(date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\"))) |&gt;\n  step_rm(date_dow) |&gt;\n  step_normalize(all_numeric(), -all_outcomes()) |&gt;\n  step_dummy(season, holiday, day_type) |&gt;\n  step_interact(terms = ~starts_with(\"season\")*starts_with(\"holiday\") + temp*rainfall) |&gt;\n  step_interact(terms = ~season_Spring*temp + season_Winter*temp) |&gt;\n  step_interact(terms = ~season_Summer*temp) |&gt;\n  step_poly(rainfall, snowfall, temp, humidity, windspeed, visibility, dewpoint, radiation, degree = 2)\n\n\n## fitting the models\nbike_mod &lt;- linear_reg() |&gt;\n  set_engine(\"lm\")\n\nbike_wfl_1 &lt;- workflow() |&gt;\n  add_recipe(bike_rec_1) |&gt;\n  add_model(bike_mod)\n\nbike_wfl_2 &lt;- workflow() |&gt;\n  add_recipe(bike_rec_2) |&gt;\n  add_model(bike_mod)\n\nbike_wfl_3 &lt;- workflow() |&gt;\n  add_recipe(bike_rec_3) |&gt;\n  add_model(bike_mod)\n\n\nbike_cv_fits_1 &lt;- bike_wfl_1 |&gt;\n  fit_resamples(bike_10_fold)\n\nbike_cv_fits_2 &lt;- bike_wfl_2 |&gt;\n  fit_resamples(bike_10_fold)\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\n\nThere were issues with some computations   A: x1\n\n\nThere were issues with some computations   A: x8\n\n\nThere were issues with some computations   A: x10\n\n\n\n\nbike_cv_fits_3 &lt;- bike_wfl_3 |&gt;\n  fit_resamples(bike_10_fold, metrics = metric_set(rmse, mae))\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\ncollect_metrics(bike_cv_fits_1)\n\n# A tibble: 2 × 6\n  .metric .estimator     mean     n  std_err .config             \n  &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard   4236.       10 146.     Preprocessor1_Model1\n2 rsq     standard      0.810    10   0.0148 Preprocessor1_Model1\n\ncollect_metrics(bike_cv_fits_2)\n\n# A tibble: 2 × 6\n  .metric .estimator     mean     n  std_err .config             \n  &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard   2980.       10 254.     Preprocessor1_Model1\n2 rsq     standard      0.900    10   0.0183 Preprocessor1_Model1\n\ncollect_metrics(bike_cv_fits_3)  # lowest RMSE\n\n# A tibble: 2 × 6\n  .metric .estimator  mean     n std_err .config             \n  &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 mae     standard   2150.    10    127. Preprocessor1_Model1\n2 rmse    standard   2947.    10    251. Preprocessor1_Model1\n\n\n\n## fitting best model to entire training data set\nbest_fit  &lt;- last_fit(bike_wfl_3, bike_split)\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\ncollect_metrics(best_fit)\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard    2882.    Preprocessor1_Model1\n2 rsq     standard       0.925 Preprocessor1_Model1\n\nbest_fit |&gt;\n  extract_fit_parsnip() |&gt;\n  tidy()\n\n# A tibble: 29 × 5\n   term                               estimate std.error statistic   p.value\n   &lt;chr&gt;                                 &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 (Intercept)                          15588.     1664.     9.37   6.20e-18\n 2 season_Spring                         1846.     2635.     0.701  4.84e- 1\n 3 season_Summer                        14601.     2255.     6.47   5.46e-10\n 4 season_Winter                        -6588.     2795.    -2.36   1.93e- 2\n 5 holiday_No.Holiday                    5917.     1518.     3.90   1.26e- 4\n 6 day_type_weekend                     -2217.      401.    -5.52   8.80e- 8\n 7 season_Spring_x_holiday_No.Holiday   -6202.     2662.    -2.33   2.06e- 2\n 8 season_Summer_x_holiday_No.Holiday      NA        NA     NA     NA       \n 9 season_Winter_x_holiday_No.Holiday   -5051.     2047.    -2.47   1.43e- 2\n10 temp_x_rainfall                      -1533.      466.    -3.29   1.15e- 3\n# ℹ 19 more rows"
  },
  {
    "objectID": "homework 9.html#lasso-model",
    "href": "homework 9.html#lasso-model",
    "title": "ST558 Homework 9",
    "section": "LASSO Model",
    "text": "LASSO Model\n\nLASSO_spec &lt;- linear_reg(penalty = tune(), mixture = 1) |&gt;\n  set_engine(\"glmnet\")\n\nLASSO_wkf &lt;- workflow() |&gt;\n  add_recipe(bike_rec_1) |&gt;\n  add_model(LASSO_spec)\n\n\nLASSO_grid &lt;- LASSO_wkf |&gt;\n  tune_grid(resamples = bike_10_fold,\n            grid = grid_regular(penalty(), levels = 200)) \n\nWarning: package 'glmnet' was built under R version 4.4.2\n\n\n\nlowest_rmse &lt;- LASSO_grid |&gt;\n  select_best(metric = \"rmse\")\n\n\nLASSO_wkf |&gt;\n  finalize_workflow(lowest_rmse) |&gt;\n  last_fit(bike_split) |&gt;\n  collect_metrics() \n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard    3836.    Preprocessor1_Model1\n2 rsq     standard       0.871 Preprocessor1_Model1"
  },
  {
    "objectID": "homework 9.html#regression-tree-model",
    "href": "homework 9.html#regression-tree-model",
    "title": "ST558 Homework 9",
    "section": "Regression Tree Model",
    "text": "Regression Tree Model\n\ntree_mod &lt;- decision_tree(tree_depth = tune(),\n                          min_n = 20,\n                          cost_complexity = tune()) |&gt;\n  set_engine(\"rpart\") |&gt;\n  set_mode(\"regression\")\n\ntree_wkf &lt;- workflow() |&gt;\n  add_recipe(bike_rec_1) |&gt;\n  add_model(tree_mod)\n\n\ntree_grid &lt;- grid_regular(cost_complexity(),\n                          tree_depth(),\n                          levels = c(10, 5))\n\n\ntree_fits &lt;- tree_wkf |&gt; \n  tune_grid(resamples = bike_10_fold,\n            grid = tree_grid)\n\n\ntree_best_params &lt;- tree_fits |&gt;\n  select_best(metric = \"rmse\")\n\ntree_final_wkf &lt;- tree_wkf |&gt;\n  finalize_workflow(tree_best_params)\n\ntree_final_fit &lt;- tree_final_wkf |&gt;\n  last_fit(bike_split)\n\ntree_final_fit |&gt;\n  collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard    3491.    Preprocessor1_Model1\n2 rsq     standard       0.891 Preprocessor1_Model1"
  },
  {
    "objectID": "homework 9.html#bagged-tree-model",
    "href": "homework 9.html#bagged-tree-model",
    "title": "ST558 Homework 9",
    "section": "Bagged Tree Model",
    "text": "Bagged Tree Model\n\nlibrary(baguette)\n\nWarning: package 'baguette' was built under R version 4.4.2\n\nbag_spec &lt;- bag_tree(tree_depth = tune(), \n                     min_n = 10, \n                     cost_complexity = tune()) |&gt;\n  set_engine(\"rpart\") |&gt;\n  set_mode(\"regression\")\n\nbag_wkf &lt;- workflow() |&gt;\n  add_recipe(bike_rec_1) |&gt;\n  add_model(bag_spec)\n\n\nbag_grid &lt;- grid_regular(cost_complexity(),\n                          tree_depth(),\n                          levels = c(10, 5))\n\n\nbag_fits &lt;- bag_wkf |&gt; \n  tune_grid(resamples = bike_10_fold,\n            grid = bag_grid)\n\n\nbag_best_params &lt;- bag_fits |&gt;\n  select_best(metric = \"rmse\")\n\nbag_final_wkf &lt;- bag_wkf |&gt;\n  finalize_workflow(bag_best_params)\n\nbag_final_fit &lt;- bag_final_wkf |&gt;\n  last_fit(bike_split)\n\nbag_final_fit |&gt;\n  collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard    3034.    Preprocessor1_Model1\n2 rsq     standard       0.920 Preprocessor1_Model1"
  },
  {
    "objectID": "homework 9.html#random-forest-model",
    "href": "homework 9.html#random-forest-model",
    "title": "ST558 Homework 9",
    "section": "Random Forest Model",
    "text": "Random Forest Model\n\nlibrary(ranger)\n\nWarning: package 'ranger' was built under R version 4.4.2\n\nrf_spec &lt;- rand_forest(mtry = tune()) |&gt;\n  set_engine(\"ranger\", importance = \"impurity\") |&gt;\n  set_mode(\"regression\")\n\nrf_wkf &lt;- workflow() |&gt;\n  add_recipe(bike_rec_1) |&gt;\n  add_model(rf_spec)\n\n\nrf_fits &lt;- rf_wkf |&gt; \n  tune_grid(resamples = bike_10_fold,\n            grid = 7)\n\ni Creating pre-processing data to finalize unknown parameter: mtry\n\n\n\nrf_best_params &lt;- rf_fits |&gt;\n  select_best(metric = \"rmse\")\n\nrf_final_wkf &lt;- rf_wkf |&gt;\n  finalize_workflow(rf_best_params)\n\nrf_final_fit &lt;- rf_final_wkf |&gt;\n  last_fit(bike_split)\n\nrf_final_fit |&gt;\n  collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard    2880.    Preprocessor1_Model1\n2 rsq     standard       0.928 Preprocessor1_Model1"
  },
  {
    "objectID": "homework 9.html#comparing-final-models",
    "href": "homework 9.html#comparing-final-models",
    "title": "ST558 Homework 9",
    "section": "Comparing final models",
    "text": "Comparing final models\n\nbike_wfl_3 |&gt;\n  last_fit(bike_split, metrics = metric_set(rmse, mae)) |&gt;\n  collect_metrics()  ## best model on both rmse and mae\n\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n\n\nThere were issues with some computations   A: x1\nThere were issues with some computations   A: x1\n\n\n\n\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard       2882. Preprocessor1_Model1\n2 mae     standard       2227. Preprocessor1_Model1\n\nLASSO_wkf |&gt;\n  finalize_workflow(lowest_rmse) |&gt;\n  last_fit(bike_split, metrics = metric_set(rmse, mae)) |&gt;\n  collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard       3836. Preprocessor1_Model1\n2 mae     standard       2952. Preprocessor1_Model1\n\ntree_final_wkf |&gt;\n  last_fit(bike_split, metrics = metric_set(rmse, mae)) |&gt;\n  collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard       3491. Preprocessor1_Model1\n2 mae     standard       2723. Preprocessor1_Model1\n\nbag_final_wkf |&gt;\n  last_fit(bike_split, metrics = metric_set(rmse, mae)) |&gt;\n  collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard       3059. Preprocessor1_Model1\n2 mae     standard       2288. Preprocessor1_Model1\n\nrf_final_wkf |&gt;\n  last_fit(bike_split, metrics = metric_set(rmse, mae)) |&gt;\n  collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard       2925. Preprocessor1_Model1\n2 mae     standard       2212. Preprocessor1_Model1\n\n\n\n## coefficient tables\nbest_fit |&gt;\n  extract_fit_parsnip() |&gt;\n  tidy()\n\n# A tibble: 29 × 5\n   term                               estimate std.error statistic   p.value\n   &lt;chr&gt;                                 &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 (Intercept)                          15588.     1664.     9.37   6.20e-18\n 2 season_Spring                         1846.     2635.     0.701  4.84e- 1\n 3 season_Summer                        14601.     2255.     6.47   5.46e-10\n 4 season_Winter                        -6588.     2795.    -2.36   1.93e- 2\n 5 holiday_No.Holiday                    5917.     1518.     3.90   1.26e- 4\n 6 day_type_weekend                     -2217.      401.    -5.52   8.80e- 8\n 7 season_Spring_x_holiday_No.Holiday   -6202.     2662.    -2.33   2.06e- 2\n 8 season_Summer_x_holiday_No.Holiday      NA        NA     NA     NA       \n 9 season_Winter_x_holiday_No.Holiday   -5051.     2047.    -2.47   1.43e- 2\n10 temp_x_rainfall                      -1533.      466.    -3.29   1.15e- 3\n# ℹ 19 more rows\n\nLASSO_wkf |&gt;\n  finalize_workflow(lowest_rmse) |&gt;\n  last_fit(bike_split, metrics = metric_set(rmse, mae)) |&gt;\n  extract_fit_parsnip() |&gt;\n  tidy()\n\n# A tibble: 14 × 3\n   term               estimate      penalty\n   &lt;chr&gt;                 &lt;dbl&gt;        &lt;dbl&gt;\n 1 (Intercept)          20321. 0.0000000001\n 2 rainfall             -1803. 0.0000000001\n 3 snowfall              -242. 0.0000000001\n 4 temp                     0  0.0000000001\n 5 humidity             -1648. 0.0000000001\n 6 windspeed             -694. 0.0000000001\n 7 visibility            -140. 0.0000000001\n 8 dewpoint              4773. 0.0000000001\n 9 radiation             3840. 0.0000000001\n10 season_Spring        -5295. 0.0000000001\n11 season_Summer        -5100. 0.0000000001\n12 season_Winter        -8074. 0.0000000001\n13 holiday_No.Holiday    2561. 0.0000000001\n14 day_type_weekend     -2089. 0.0000000001\n\n\n\n## plot final fit\nlibrary(rpart.plot)\n\nWarning: package 'rpart.plot' was built under R version 4.4.2\n\ntree_final_model &lt;- extract_workflow(tree_final_fit) \ntree_final_model |&gt;\n  extract_fit_engine() |&gt;\n  rpart.plot::rpart.plot(roundint = FALSE)\n\n\n\n\n\n\n\n\n\n## variable importance plots\nbag_final_model &lt;- extract_fit_engine(bag_final_fit)\n\nbag_final_model$imp |&gt;\n  mutate(term = factor(term, levels = term)) |&gt;\n  ggplot(aes(x = term, y = value)) +\n  geom_bar(stat =\"identity\") +\n  coord_flip()\n\n\n\n\n\n\n\nlibrary(vip)\n\nWarning: package 'vip' was built under R version 4.4.2\n\n\n\nAttaching package: 'vip'\n\n\nThe following object is masked from 'package:utils':\n\n    vi\n\nrf_final_model &lt;- extract_fit_engine(rf_final_fit)\n\nvip(rf_final_model, geom = \"col\")\n\n\n\n\n\n\n\n\n\n## fit best overall model to entire data set\nfinal_best_fit &lt;- bike_wfl_3 |&gt;\n  fit(sum_data)\ntidy(final_best_fit)\n\n# A tibble: 29 × 5\n   term                               estimate std.error statistic  p.value\n   &lt;chr&gt;                                 &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 (Intercept)                          16237.     1569.    10.4   6.95e-22\n 2 season_Spring                        -1666.     2241.    -0.743 4.58e- 1\n 3 season_Summer                        17336.     2970.     5.84  1.30e- 8\n 4 season_Winter                        -7836.     2437.    -3.21  1.44e- 3\n 5 holiday_No.Holiday                    5545.     1457.     3.81  1.69e- 4\n 6 day_type_weekend                     -2399.      336.    -7.14  6.24e-12\n 7 season_Spring_x_holiday_No.Holiday   -2822.     2277.    -1.24  2.16e- 1\n 8 season_Summer_x_holiday_No.Holiday   -1854.     2462.    -0.753 4.52e- 1\n 9 season_Winter_x_holiday_No.Holiday   -3265.     1798.    -1.82  7.04e- 2\n10 temp_x_rainfall                      -1527.      436.    -3.50  5.29e- 4\n# ℹ 19 more rows"
  }
]